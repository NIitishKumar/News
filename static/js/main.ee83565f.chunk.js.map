{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","author","setAuthor","content","setContent","image","setImage","useEffect","a","fetch","res","json","data","console","log","articles","urlToImage","handleSelectChange","e","value","className","class","onChange","options","label","placeholder","style","width","src","alt","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OA+DeA,MA3Df,WAAgB,IAAD,EACeC,mBAAS,IADxB,mBACNC,EADM,KACEC,EADF,OAEiBF,mBAAS,IAF1B,mBAENG,EAFM,KAEGC,EAFH,OAGaJ,mBAAS,IAHtB,mBAGNK,EAHM,KAGCC,EAHD,KAKbC,oBAAS,sBAAC,8BAAAC,EAAA,sEACUC,MAAM,2FADhB,cACFC,EADE,gBAIWA,EAAIC,OAJf,OAIFC,EAJE,OAKRC,QAAQC,IAAIF,EAAKG,SAAS,IAC1Bb,EAAUU,EAAKG,SAAS,GAAGd,QAC3BG,EAAWQ,EAAKG,SAAS,GAAGZ,SAC5BG,EAASM,EAAKG,SAAS,GAAGC,YARlB,4CASP,IAEH,IAAMC,EAAkB,uCAAG,WAAOC,GAAP,iBAAAV,EAAA,6DACzBK,QAAQC,IAAII,EAAEC,OADW,SAEPV,MAAM,gDAAD,OAC2BS,EAAEC,MAD7B,6CAFE,cAEnBT,EAFmB,gBAKNA,EAAIC,OALE,OAKnBC,EALmB,OAMzBC,QAAQC,IAAIF,EAAKG,SAAS,IAC1Bb,EAAUU,EAAKG,SAAS,GAAGd,QAC3BG,EAAWQ,EAAKG,SAAS,GAAGZ,SAC5BG,EAASM,EAAKG,SAAS,GAAGC,YATD,4CAAH,sDAYxB,OACE,sBAAKI,UAAU,YAAf,UACE,cAAC,IAAD,CACEC,MAAM,cAENC,SAAUL,EACVM,QAAS,CACP,CAAEJ,MAAO,KAAMK,MAAO,MACtB,CAAEL,MAAO,KAAMK,MAAO,OAGxBC,YAAY,mBAEd,qBAAKL,UAAU,gCAAf,SACE,qBAAKC,MAAM,OAAOK,MAAO,CAAEC,MAAO,SAAlC,SACE,sBAAKN,MAAM,YAAX,UACE,qBAAKA,MAAM,eAAeO,IAAKvB,EAAOwB,IAAI,mBAC1C,uBACA,uBACA,qBAAIR,MAAM,aAAV,sBAAiCpB,KACjC,oBAAGoB,MAAM,YAAT,uBAAgClB,KAChC,mBAAG2B,KAAK,IAAIT,MAAM,kBAAlB,qCCzCGU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ee83565f.chunk.js","sourcesContent":["import \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport Select from \"react-select\";\n\nfunction App() {\n  const [author, setAuthor] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n\n  useEffect(async () => {\n    const res = await fetch(\n      `https://newsapi.org/v2/top-headlines?country=us&apiKey=93d7f23b97a14e3e88111033f4dec6f6`\n    );\n    const data = await res.json();\n    console.log(data.articles[0]);\n    setAuthor(data.articles[0].author);\n    setContent(data.articles[0].content);\n    setImage(data.articles[0].urlToImage);\n  }, []);\n\n  const handleSelectChange = async (e) => {\n    console.log(e.value);\n    const res = await fetch(\n      `https://newsapi.org/v2/top-headlines?country=${e.value}&apiKey=93d7f23b97a14e3e88111033f4dec6f6`\n    );\n    const data = await res.json();\n    console.log(data.articles[0]);\n    setAuthor(data.articles[0].author);\n    setContent(data.articles[0].content);\n    setImage(data.articles[0].urlToImage);\n  };\n\n  return (\n    <div className=\"container\">\n      <Select\n        class=\"form-select\"\n        // value={}\n        onChange={handleSelectChange}\n        options={[\n          { value: \"in\", label: \"in\" },\n          { value: \"us\", label: \"us\" },\n          // { value: 2018, label: 2018 },\n        ]}\n        placeholder=\"Select Year...\"\n      />\n      <div className=\"d-flex justify-content-center\">\n        <div class=\"card\" style={{ width: \"18rem\" }}>\n          <div class=\"card-body\">\n            <img class=\"card-img-top\" src={image} alt=\"Card image cap\" />\n            <br />\n            <br />\n            <h5 class=\"card-title\">Auther : {author}</h5>\n            <p class=\"card-text\">Content : {content}</p>\n            <a href=\"#\" class=\"btn btn-primary\">\n              Go somewhere\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}